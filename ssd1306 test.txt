import Adafruit_GPIO.SPI as SPI
import SSD1306
import RPi.GPIO as GPIO

from PIL import Image
from PIL import ImageFont
from PIL import ImageDraw

RST = 25
DC = 12
CS = 5
SPI_PORT = 0
SPI_DEVICE = 0
FONT_FOLDER = '/home/pi/Looper/test/Font/'

spi_disp = SSD1306.SSD1306_128_64(rst=RST, dc=DC, cs=CS, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=8000000))
#spi_disp = SSD1306.SSD1306_128_32(rst=RST)
spi_disp.begin()
spi_disp.clear()
spi_disp.display()
width = spi_disp.width
height = spi_disp.height
image = Image.new('1', (width, height))
draw = ImageDraw.Draw(image)
draw.rectangle((0,0,width,height), outline=255, fill=255)
#spi_disp.image(image)
#spi_disp.display()






# Draw some shapes.
# First define some constants to allow easy resizing of shapes.
padding = 2
shape_width = 20
top = padding
bottom = height-padding
# Move left to right keeping track of the current x position for drawing shapes.
x = padding
# Draw an ellipse.
draw.ellipse((x, top , x+shape_width, bottom), outline=255, fill=0)
x += shape_width+padding
# Draw a rectangle.
draw.rectangle((x, top, x+shape_width, bottom), outline=255, fill=0)
x += shape_width+padding
# Draw a triangle.
draw.polygon([(x, bottom), (x+shape_width/2, top), (x+shape_width, bottom)], outline=255, fill=0)
x += shape_width+padding
# Draw an X.
draw.line((x, bottom, x+shape_width, top), fill=255)
draw.line((x, top, x+shape_width, bottom), fill=255)
x += shape_width+padding


font = ImageFont.load_default()
draw.text((x, top),    'Hello',  font=font, fill=255)
draw.text((x, top+20), 'World!', font=font, fill=255)


spi_disp.image(image)
spi_disp.display()





# class ButtonDisplay(object):

# 	font_type = None
# 	font_size = 0
# 	currentButton_SongMode = None

# 	def __init__(self, ft=None, fs=None):	
# 		if ft is None and fs is None:
# 			self.invertDisplayColors = False
# 			self.spiEnable()
# 			spi_disp.begin()
# 			self.width = spi_disp.width
# 			self.height = spi_disp.height
# 			spi_disp.clear()
# 			spi_disp.display()
# 			self.spiDisable()
# 			self.pedalImage = None
# 		else:
# 			ButtonDisplay.font_type = ft
# 			ButtonDisplay.font_size = fs

# 	def setButtonDisplayMessage(self, msg, mode):
# 		self.message = msg
# 		backgroundColor = 0
# 		textColor = 255
# 		image = Image.new('1', (self.width, self.height))
# 		font = ImageFont.truetype(FONT_FOLDER + self.font_type + ".ttf", self.font_size)
# 		draw = ImageDraw.Draw(image)
# 		# Clear image buffer by drawing a black filled box.
# 		if self.invertDisplayColors and mode == "Song":
# 			backgroundColor = 255
# 			textColor = 0
			
# 		draw.rectangle((0,0,self.width,self.height), outline=backgroundColor, fill=backgroundColor)
# 		y = 0
# 		if self.pedalImage is not None:
# 			image = Image.open('/home/pi/Looper/SSD1306/images/' + self.pedalImage + '.ppm').convert('1') #for testing. comment when not testing
# 		else:
# 			for str in msg.split(" "):
# 				xMax, yMax = draw.textsize(str, font=font)
# 				x = (self.width - xMax)/2
# 				draw.text((x, y), str, font=font, fill=textColor) 
# 				y += yMax + 2

# 		self.spiEnable()
# 		spi_disp.image(image)
# 		spi_disp.display()
# 		self.spiDisable()
	
# 	def setFont(self, fontType=None, fontSize=None):
# 		if fontType is not None:
# 			ButtonDisplay.font_type = fontType
# 		if fontSize is not None:
# 			ButtonDisplay.font_size = int(fontSize)	
		
# 	def spiEnable(self):
# 		slave_select.set_output(self.button,GPIO.LOW)
	
# 	def spiDisable(self):
# 		slave_select.set_output(self.button,GPIO.HIGH)
		
# 	def setPedalImage(self, filename):
# 		self.pedalImage = filename